name: Releasing

on:
  workflow_dispatch:

jobs:
  lint:
    uses: despores/shri-infra-homework/.github/workflows/lint.yml@main

  test:
    uses: despores/shri-infra-homework/.github/workflows/test.yml@main

  create-release:
    runs-on: ubuntu-latest
    env:
      IMAGE: cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app

    steps:

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release branch
        run: git checkout -b releases/${{ github.run_number }}

      - name: Login to Yandex Cloud
        run: |
          echo "${{ secrets.OAUTH_KEY }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Create docker image
        run: docker build -t ${{ env.IMAGE }}:${{ github.run_number }} -t ${{ env.IMAGE }}:${{ github.run_number }}_latest .

      - name: Upload docker image to Container Registry
        run: docker push --all-tags ${{ env.IMAGE }}

      - name: Push release branch
        run: git push -u origin releases/${{ github.run_number }}

      - name: Create tag
        run: |
          git checkout main
          git tag release-version-${{ github.run_number }}
          git push origin --tags
      
      - name: Get commit list
        id: commits
        run: echo "commits=$(git log $(release-version-${{ github.run_number }})..HEAD --pretty=format:"%H by %an with message %s")" >> "$GITHUB_OUTPUT"

      - name: Create Issue
        env:
          BODY: |
            Commit list from previous release:
            ${{ steps.commits.outputs.commits }}
            Docker image in container registry: ${{ env.IMAGE }} 
        run: |
          gh issue create \
          --title "Version ${{ github.run_number }}" \
          --assignee "${{ github.triggering_actor }}" \
          --labels "release" \
          --body "${{ env.BODY }}"


