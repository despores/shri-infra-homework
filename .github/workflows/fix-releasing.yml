name: Fix-release

on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Release version"
        required: true
        type: number

jobs:
  lint:
    uses: despores/shri-infra-homework/.github/workflows/lint.yml@main

  test:
    uses: despores/shri-infra-homework/.github/workflows/test.yml@main

  fix-release:
    runs-on: ubuntu-latest
    env:
      IMAGE: cr.yandex/${{ secrets.CONTAINER_REGISTRY_ID }}/app
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          ref: releases/${{ inputs.release-version }}

      - name: Login to Container Registry
        run: |
          echo "${{ secrets.OAUTH_KEY }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Create docker image
        run: docker build -t ${{ env.IMAGE }}:${{ inputs.release-version }}_fix${{ github.run_number }} -t ${{ env.IMAGE }}:${{ inputs.release-version }}_latest .

      - name: Upload docker image to Container Registry
        run: docker push --all-tags ${{ env.IMAGE }}

      - name: Get commit list
        id: commits
        uses: despores/shri-infra-homework/.github/workflows/get-commit-list.yml@main

      - name: Create tag
        run: |
          git tag release-version-${{ inputs.release-version }}-fix-${{ github.run_number }}
          git push origin --tags

      - name: Comment on Issue
        env:
          BODY: |
            Release fix from ${{ github.triggering_actor }}

            Commit list from previous release/fix-release tag:
            ${{ steps.commits.outputs.commits }}

            Docker image in container registry: ${{ env.IMAGE }}:${{ inputs.release-version }}_fix${{ github.run_number }}
        run: |
          ISSUE_NUMBER=$(gh issue list --label "release-${{ inputs.release-version }}" --json number --jq '.[0].number')
          gh issue comment $ISSUE_NUMBER \
          --body "${{ env.BODY }}" \

